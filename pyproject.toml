[tool.poetry]
name = "asteria"
version = "1.3.0"
description = "Prometheus pull server for Hermes database metrics"
authors = ["Bink <bink@bink.bink>"]
readme = "README.md"
packages = [{include = "asteria"}]

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = "azure"
url = "https://pkgs.dev.azure.com/binkhq/_packaging/binkhq/pypi/simple/"
priority = "explicit"

[tool.poetry.dependencies]
python = "^3.11"
sqlalchemy = "^1.4.49"
psycopg2-binary = "^2.9.6"
prometheus-client = "^0.17.1"
falcon = "^3.1.1"
gunicorn = "^20.1.0"
python-decouple = "^3.8"
bink-logging-utils = {extras = ["gunicorn"], version = "^1.3.0", source="azure"}

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
mypy = "^1.4.1"
xenon = "^0.9.0"
isort = "^5.12.0"
ruff = "^0.0.278"
refurb = "^1.17.0"
ipython = "^8.14.0"
werkzeug = "^2.3.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.mypy]
disallow_untyped_defs = true
show_error_codes = true
warn_unused_ignores = true
ignore_missing_imports = true
disallow_incomplete_defs = true
warn_redundant_casts = true
# exclude = "alembic/versions/"
plugins = [
    "sqlalchemy.ext.mypy.plugin",
]

[tool.ruff]
line-length = 120
show-source = true
target-version = "py311"
select = [
    "F",    # Pyflakes (F)
    "E",
    "W",    # pycodestyle (E, W)
    "C90",  # mccabe (C90)
    # isort (I)
    # pydocstyle (D)
    "UP",   # pyupgrade (UP)
    "N",    # pep8-naming (N)
    "YTT",  # flake8-2020 (YTT)
    # "ANN",  # flake8-annotations (ANN)
    # "S",    # flake8-bandit (S)
    "BLE",  # flake8-blind-except (BLE)
    # flake8-boolean-trap (FBT)
    "B",    # flake8-bugbear (B)
    "A",    # flake8-builtins (A)
    "C4",   # flake8-comprehensions (C4)
    "T10",  # flake8-debugger (T10)
    # flake8-errmsg (EM)
    "ICN",  # flake8-import-conventions (ICN)
    "T20",  # flake8-print (T20)
    # "PT",   # flake8-pytest-style (PT)
    "Q",    # flake8-quotes (Q)
    # flake8-return (RET)
    "SIM",  # flake8-simplify (SIM)
    "TID",  # flake8-tidy-imports (TID)
    "ARG",  # flake8-unused-arguments (ARG)
    "DTZ",  # flake8-datetimez (DTZ)
    "ERA",  # eradicate (ERA) until we can remove commented out code this has to stay deactivated
    # pandas-vet (PD)
    # pygrep-hooks (PGH)
    "PLC",
    "PLE",
    "PLR",
    "PLW",  # Pylint (PLC, PLE, PLR, PLW)
    "RUF",  # Ruff-specific rules (RUF)
]

[tool.ruff.per-file-ignores]
"asteria/database.py" = ["A003"]

[tool.refurb]
ignore = [
    "FURB184",  # some chaining suggestions don't make sense
]
