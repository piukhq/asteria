stages:
  - tests
  - dev
  - staging
  - preprod
  - build
  - prod

complexity:
  stage: tests
  image: binkhq/python:3.9
  script:
    - pip install xenon flake8_polyfill
    - xenon --max-average A --max-modules B --max-absolute B .

flake8:
  stage: tests
  image: binkhq/python:3.9
  script:
    - pip install flake8
    - flake8 *

dev:
  stage: dev
  environment: 
    name: dev
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/asteria:develop-$CI_COMMIT_SHORT_SHA" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/asteria:develop-$CI_COMMIT_SHORT_SHA" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/asteria:develop-$CI_COMMIT_SHORT_SHA"
  only:
    - develop

staging:
  stage: staging
  environment: 
    name: staging
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/asteria:staging-$CI_COMMIT_SHORT_SHA" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/asteria:staging-$CI_COMMIT_SHORT_SHA" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/asteria:staging-$CI_COMMIT_SHORT_SHA"
  only:
    - staging

preprod:
  stage: preprod
  environment: 
    name: preprod
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/asteria:preprod-$CI_COMMIT_SHORT_SHA" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/asteria:preprod-$CI_COMMIT_SHORT_SHA" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/asteria:preprod-$CI_COMMIT_SHORT_SHA"
  when: manual
  only:
    - master

build:
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/asteria:$CI_COMMIT_TAG" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/asteria:$CI_COMMIT_TAG" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/asteria:$CI_COMMIT_TAG"
  only:
    - tags

release-prod:
  stage: prod
  image: binkops.azurecr.io/tagbot:latest
  environment: 
    name: prod
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/asteria:$CI_COMMIT_TAG" --tag "prod-$CI_COMMIT_TAG"
  when: manual
  only:
    - tags